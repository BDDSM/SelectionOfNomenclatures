
&ИзменениеИКонтроль("ПолучитьИнформациюОТовареПриЗакупке")
Процедура ПодборТоваров_ПолучитьИнформациюОТовареПриЗакупке(Форма)

	Если Не Форма.ОтображатьОстатки Тогда
		Возврат;
	КонецЕсли;

	ОстаткиПоСкладам = Форма.ОстаткиТоваров.ПолучитьЭлементы();
	ОстаткиПоСкладам.Очистить();

	ОстаткиПоСкладамПоставщика = Форма.ОстаткиТоваровПоставщика.ПолучитьЭлементы();
	ОстаткиПоСкладамПоставщика.Очистить();

	Если Форма.РежимПодбораБезСуммовыхПараметров И Не Форма.ОтображатьОстатки Тогда
		Возврат;
	КонецЕсли;

	ХарактеристикиИспользуются = Форма.ТекущаяСтрокаНоменклатуры.ХарактеристикиИспользуются;
	ЭтоТовар = Форма.ТекущаяСтрокаНоменклатуры.ЭтоТовар;

	Если ЭтоТовар <> Истина Тогда
		Возврат;
	КонецЕсли;

	Если Форма.НавигацияПоНоменклатуреПартнера Тогда

		СтрокаТаблицыНоменклатурыПартнера = Форма.Элементы[ПодборТоваровКлиентСервер.ИмяСпискаНоменклатурыПартнераПоВариантуПоиска(Форма)].ТекущиеДанные;
		Если СтрокаТаблицыНоменклатурыПартнера = Неопределено Тогда
			Возврат;
		КонецЕсли;

		Номенклатура = СтрокаТаблицыНоменклатурыПартнера.Номенклатура;
		Если ХарактеристикиИспользуются Тогда
			Характеристика = СтрокаТаблицыНоменклатурыПартнера.Характеристика;
		КонецЕсли;

		УстановитьТекущуюСтрокуИерархииНоменклатурыПартнера(Форма);
	Иначе
		Номенклатура = Форма.ТекущаяСтрокаНоменклатуры.Номенклатура;
		Характеристика = Форма.ТекущаяСтрокаХарактеристик.Характеристика;
	КонецЕсли;

	Если Не Форма.НавигацияПоХарактеристикам Тогда
		Характеристика = ПредопределенноеЗначение("Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка");
	КонецЕсли;

	ИнформацияОТоваре = ПодборТоваровВызовСервера.ЦенаЗакупкиИОстаткиТовара(Номенклатура, Характеристика, 
	Форма.Соглашение, Форма.Валюта, Форма.Склады);

	СтруктураЦена = ИнформацияОТоваре.Цена;

	НаименованиеУпаковкиЕдиницыИзмерения = ?(ЗначениеЗаполнено(СтруктураЦена.Упаковка), 
	Строка(СтруктураЦена.Упаковка), 
	Строка(СтруктураЦена.ЕдиницаИзмерения));

	Для Каждого СтрокаТекущиеОстатки Из ИнформацияОТоваре.ТекущиеОстатки Цикл

		СтрокаОстаткиПоСкладам = ОстаткиПоСкладам.Добавить();

		СтрокаОстаткиПоСкладам.Период = Форма.ТекущаяДатаСеанса;
		СтрокаОстаткиПоСкладам.ПериодОписание = НСтр("ru = 'Сейчас'");

		СтрокаОстаткиПоСкладам.Доступно = СтрокаТекущиеОстатки.Свободно;

		СтрокаОстаткиПоСкладам.ДоступноОписание = ОписаниеДоступногоКоличества(
		СтрокаОстаткиПоСкладам.Доступно,
		НаименованиеУпаковкиЕдиницыИзмерения,
		ХарактеристикиИспользуются,
		Форма.НавигацияПоХарактеристикам Или Форма.НавигацияПоНоменклатуреПартнера);

		СтрокаОстаткиПоСкладам.Склад = СтрокаТекущиеОстатки.Склад;
		СтрокаОстаткиПоСкладам.СкладОписание = Строка(СтрокаТекущиеОстатки.Склад);
		СтрокаОстаткиПоСкладам.СкладДоступенДляВыбора = СкладДоступенДляВыбора(Форма, СтрокаОстаткиПоСкладам.Склад);

		СтрокаОстаткиПоСкладамПоставщика = ОстаткиПоСкладамПоставщика.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаОстаткиПоСкладамПоставщика, СтрокаОстаткиПоСкладам);

		ПланируемыеОстаткиПоДатам = СтрокаОстаткиПоСкладам.ПолучитьЭлементы();
		ПланируемыеОстаткиПоДатамПоставщика = СтрокаОстаткиПоСкладамПоставщика.ПолучитьЭлементы();

		// Вывести планируемые остатки по графику движений товаров.
		Для Каждого СтрокаПланируемыеОстатки Из ИнформацияОТоваре.ПланируемыеОстатки Цикл

			Если Не (СтрокаПланируемыеОстатки.Склад = СтрокаОстаткиПоСкладам.Склад) Тогда
				Продолжить;
			КонецЕсли;

			// ... в таблицу планируемых остатков по датам.
			СтрокаПланируемыеОстаткиПоДатам = ПланируемыеОстаткиПоДатам.Добавить();

			СтрокаПланируемыеОстаткиПоДатам.Период = СтрокаПланируемыеОстатки.Период;
			СтрокаПланируемыеОстаткиПоДатам.ПериодОписание = Формат(СтрокаПланируемыеОстатки.Период, "ДЛФ=D");

			СтрокаПланируемыеОстаткиПоДатам.Доступно = СтрокаПланируемыеОстатки.Доступно;

			СтрокаПланируемыеОстаткиПоДатам.ДоступноОписание = ОписаниеДоступногоКоличества(
			СтрокаПланируемыеОстаткиПоДатам.Доступно,
			НаименованиеУпаковкиЕдиницыИзмерения,
			ХарактеристикиИспользуются,
			Форма.НавигацияПоХарактеристикам);

			СтрокаПланируемыеОстаткиПоДатам.Склад = СтрокаПланируемыеОстатки.Склад;
			СтрокаПланируемыеОстаткиПоДатам.СкладОписание = "";
			СтрокаПланируемыеОстаткиПоДатам.СкладДоступенДляВыбора = СкладДоступенДляВыбора(Форма, СтрокаПланируемыеОстаткиПоДатам.Склад);

			// ... в таблицу планируемых остатков поставщика по датам.
			СтрокаПланируемыеОстаткиПоставщикаПоДатам = ПланируемыеОстаткиПоДатамПоставщика.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаПланируемыеОстаткиПоставщикаПоДатам, СтрокаПланируемыеОстаткиПоДатам);

		КонецЦикла;

	КонецЦикла;
	
	//// Вывод итогов по всем складам.
	//СвободныеОстаткиПоСкладам = ПодборТоваровВызовСервера.ОстаткиПоВСемСкладам(Номенклатура);
	//Если СвободныеОстаткиПоСкладам <> 0 Тогда
	//	СтрокаОстаткиПоСкладам = ОстаткиПоСкладам.Добавить();
	//	СтрокаОстаткиПоСкладам.СкладОписание = НСтр("ru = 'Итого по складам'");
	//	СтрокаОстаткиПоСкладам.Доступно      = СвободныеОстаткиПоСкладам;
	//	СтрокаОстаткиПоСкладам.ДоступноОписание = ОписаниеДоступногоКоличества(
	//		СвободныеОстаткиПоСкладам,
	//		НаименованиеУпаковкиЕдиницыИзмерения, 
	//		ХарактеристикиИспользуются,
	//		НавигацияПоХарактеристикам);
	//	СтрокаОстаткиПоСкладам.СкладДоступенДляВыбора = Ложь;
	//	СтрокаОстаткиПоСкладам.Период = ТекущаяДата();
	//	СтрокаОстаткиПоСкладам.ПериодОписание = НСтр("ru = 'Сейчас'");
	//КонецЕсли;

КонецПроцедуры